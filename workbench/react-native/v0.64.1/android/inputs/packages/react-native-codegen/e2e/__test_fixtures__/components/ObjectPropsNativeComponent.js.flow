// @flow
import type {ViewProps} from "../../../../../Libraries/Components/View/ViewPropTypes";
import type {ImageSource} from "../../../../../Libraries/Image/ImageSource";
import type {PointValue} from "../../../../../Libraries/StyleSheet/StyleSheetTypes";
import type {ColorValue} from "../../../../../Libraries/StyleSheet/StyleSheet";
import type {Int32} from "../../../../../Libraries/Types/CodegenTypes";
import type {Float} from "../../../../../Libraries/Types/CodegenTypes";
import type {WithDefault} from "../../../../../Libraries/Types/CodegenTypes";

import type {HostComponent} from "../../../../../Libraries/Renderer/shims/ReactNativeTypes";

type ObjectArrayPropType = $ReadOnly<
  {|
    array: $ReadOnlyArray<string>,
  |},
>;

type NativeProps = $ReadOnly<
  {|
    ...ViewProps,
    
    // Props
    objectProp?: $ReadOnly<
      {|
        stringProp?: WithDefault<string, ''>,
        booleanProp: boolean,
        floatProp: Float,
        intProp: Int32,
        stringEnumProp?: WithDefault<'small' | 'large', 'small'>,
        intEnumProp?: WithDefault<0 | 1, 0>,
      |},
    >,
    objectArrayProp: ObjectArrayPropType,
    objectPrimitiveRequiredProp: $ReadOnly<
      {|
        image: ImageSource,
        color?: ColorValue,
        point: ?PointValue,
      |},
    >,
  |},
>;

declare export default HostComponent<NativeProps>;
