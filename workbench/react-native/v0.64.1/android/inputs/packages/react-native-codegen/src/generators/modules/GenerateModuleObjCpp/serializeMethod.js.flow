// @flow
import type {NativeModulePropertySchema} from "../../../CodegenSchema";

import type {AliasResolver} from "../Utils";

declare var StructCollector: typeof $2.StructCollector;
declare var $2: typeof $1;
const $1 = require("./StructCollector");

type StructParameterRecord = $ReadOnly<
  {|
    paramIndex: number,
    structName: string,
  |},
>;

type ReturnJSType = 
  | 'VoidKind'
  | 'PromiseKind'
  | 'ObjectKind'
  | 'ArrayKind'
  | 'NumberKind'
  | 'StringKind';

type MethodSerializationOutput = $ReadOnly<
  {|
    methodName: string,
    protocolMethod: string,
    selector: string,
    structParamRecords: $ReadOnlyArray<StructParameterRecord>,
    returnJSType: ReturnJSType,
    argCount: number,
  |},
>;

declare function serializeMethod(
  hasteModuleName: string,
  property: NativeModulePropertySchema,
  structCollector: StructCollector,
  resolveAlias: AliasResolver
): $ReadOnlyArray<MethodSerializationOutput>;
export type {StructParameterRecord};

export type {MethodSerializationOutput};

declare module.exports: {|
  serializeMethod: typeof serializeMethod,
|};
