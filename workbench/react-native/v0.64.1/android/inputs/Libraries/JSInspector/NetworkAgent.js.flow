// @flow
declare var InspectorAgent: typeof $1;
const $1 = require("./InspectorAgent");

type RequestId = string;

type Headers = {[string]: string};

declare class Interceptor {
  constructor(agent: NetworkAgent): void,
  
  getData(requestId: string): ?string,
  
  requestSent(id: number, url: string, method: string, headers: Headers): void,
  
  responseReceived(
    id: number,
    url: string,
    status: number,
    headers: Headers
  ): void,
  
  dataReceived(id: number, data: string): void,
  
  loadingFinished(id: number, encodedDataLength: number): void,
  
  loadingFailed(id: number, error: string): void,
}

type EnableArgs = {
  maxResourceBufferSize?: number,
  maxTotalBufferSize?: number,
  ...,
};

declare class NetworkAgent
  extends $2 {
  static DOMAIN: string,
  
  enable(EnableArgs): void,
  
  disable(): void,
  
  getResponseBody(
    {
      requestId: RequestId,
      ...,
    }
  ): {
    body: ?string,
    base64Encoded: boolean,
    ...,
  },
  
  interceptor(): Interceptor,
}
declare var $2: typeof InspectorAgent;

declare module.exports: typeof NetworkAgent;
