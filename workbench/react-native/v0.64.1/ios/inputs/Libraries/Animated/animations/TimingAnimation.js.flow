// @flow
declare var AnimatedValue: typeof $2;
const $2 = require("../nodes/AnimatedValue");
declare var AnimatedValueXY: typeof $3;
const $3 = require("../nodes/AnimatedValueXY");
declare var AnimatedInterpolation: typeof $1;
const $1 = require("../nodes/AnimatedInterpolation");
declare var Animation: typeof $4;
const $4 = require("./Animation");

import type {AnimationConfig} from "./Animation";
import type {EndCallback} from "./Animation";

type TimingAnimationConfig = {
  ...AnimationConfig,
  toValue: 
    | number
    | AnimatedValue
    | {
      x: number,
      y: number,
      ...,
    }
    | AnimatedValueXY
    | AnimatedInterpolation,
  easing?: (value: number) => number,
  duration?: number,
  delay?: number,
};

type TimingAnimationConfigSingle = {
  ...AnimationConfig,
  toValue: number | AnimatedValue | AnimatedInterpolation,
  easing?: (value: number) => number,
  duration?: number,
  delay?: number,
};

declare class TimingAnimation
  extends $5 {
  constructor(config: TimingAnimationConfigSingle): void,
  
  __getNativeAnimationConfig(): any,
  
  start(
    fromValue: number,
    onUpdate: (value: number) => void,
    onEnd: ?EndCallback,
    previousAnimation: ?Animation,
    animatedValue: AnimatedValue
  ): void,
  
  onUpdate(): void,
  
  stop(): void,
}
declare var $5: typeof Animation;
export type {TimingAnimationConfig};

export type {TimingAnimationConfigSingle};

declare module.exports: typeof TimingAnimation;
