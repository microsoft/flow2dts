// @flow
import AnimatedImplementation from "../../Animated/AnimatedImplementation";
import * as React from "react";

import type {LayoutEvent} from "../../Types/CoreEventTypes";

type Props = {
  children?: React.Element<any>,
  nextHeaderLayoutY: ?number,
  onLayout: (event: LayoutEvent) => void,
  scrollAnimatedValue: AnimatedImplementation.Value,
  // Will cause sticky headers to stick at the bottom of the ScrollView instead
  // of the top.
  inverted: ?boolean,
  // The height of the parent ScrollView. Currently only set when inverted.
  scrollViewHeight: ?number,
  nativeID?: ?string,
  ...,
};

type State = {
  measured: boolean,
  layoutY: number,
  layoutHeight: number,
  nextHeaderLayoutY: ?number,
  translateY: ?number,
  ...,
};

declare class ScrollViewStickyHeader
  extends $1<Props, State> {
  state: State,
  
  setNextHeaderY(y: number): void,
  
  UNSAFE_componentWillReceiveProps(nextProps: Props): void,
  
  updateTranslateListener(
    translateY: AnimatedImplementation.Interpolation,
    isFabric: boolean
  ): void,
  
  render(): React.Node,
}
declare var $1: typeof React.Component;
export type {Props};

declare module.exports: typeof ScrollViewStickyHeader;
