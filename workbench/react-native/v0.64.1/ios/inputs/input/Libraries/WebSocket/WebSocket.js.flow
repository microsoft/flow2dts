// @flow
import Blob from "../Blob/Blob";

type ArrayBufferView = 
  | Int8Array
  | Uint8Array
  | Uint8ClampedArray
  | Int16Array
  | Uint16Array
  | Int32Array
  | Uint32Array
  | Float32Array
  | Float64Array
  | DataView;

type BinaryType = 'blob' | 'arraybuffer';

declare class WebSocket
  extends $1 {
  static CONNECTING: number,
  static OPEN: number,
  static CLOSING: number,
  static CLOSED: number,
  
  CONNECTING: number,
  OPEN: number,
  CLOSING: number,
  CLOSED: number,
  
  onclose: ?Function,
  onerror: ?Function,
  onmessage: ?Function,
  onopen: ?Function,
  
  bufferedAmount: number,
  extension: ?string,
  protocol: ?string,
  readyState: number,
  url: ?string,
  
  constructor(
    url: string,
    protocols: ?string | ?Array<string>,
    options: ?{headers?: {origin?: string,...},...}
  ): void,
  
  get binaryType(): ?BinaryType,
  
  set binaryType(binaryType: BinaryType): void,
  
  close(code?: number, reason?: string): void,
  
  send(data: string | ArrayBuffer | ArrayBufferView | Blob): void,
  
  ping(): void,
}
declare var $1: any;

declare module.exports: typeof WebSocket;
