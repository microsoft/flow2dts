// @flow
import type {ColorValue} from "./StyleSheet";
import type {ProcessedColorValue} from "./processColor";

opaque type NativeColorValue = {
  semantic?: Array<string>,
  dynamic?: {
    light: ?(ColorValue | ProcessedColorValue),
    dark: ?(ColorValue | ProcessedColorValue),
  },
};

declare var PlatformColor: (...names: Array<string>) => ColorValue;

type DynamicColorIOSTuplePrivate = {
  light: ColorValue,
  dark: ColorValue,
};

declare var DynamicColorIOSPrivate: (
  tuple: DynamicColorIOSTuplePrivate
) => ColorValue;

declare var normalizeColorObject: (
  color: NativeColorValue
) => ?ProcessedColorValue;

declare var processColorObject: (color: NativeColorValue) => ?NativeColorValue;
export type {NativeColorValue};

export {PlatformColor};

export type {DynamicColorIOSTuplePrivate};

export {DynamicColorIOSPrivate};

export {normalizeColorObject};

export {processColorObject};
