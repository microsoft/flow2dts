// @flow
declare var AnimatedNode: typeof $2;
const $2 = require("./AnimatedNode");
declare var AnimatedWithChildren: typeof $3;
const $3 = require("./AnimatedWithChildren");

type ExtrapolateType = 'extend' | 'identity' | 'clamp';

type InterpolationConfigType = {
  inputRange: $ReadOnlyArray<number>,
  outputRange: $ReadOnlyArray<number> | $ReadOnlyArray<string>,
  easing?: (input: number) => number,
  extrapolate?: ExtrapolateType,
  extrapolateLeft?: ExtrapolateType,
  extrapolateRight?: ExtrapolateType,
};

declare class AnimatedInterpolation
  extends $1 {
  static __createInterpolation: (
    config: InterpolationConfigType
  ) => (input: number) => number | string,
  
  constructor(parent: AnimatedNode, config: InterpolationConfigType): void,
  
  __makeNative(): void,
  
  __getValue(): number | string,
  
  interpolate(config: InterpolationConfigType): AnimatedInterpolation,
  
  __attach(): void,
  
  __detach(): void,
  
  __transformDataType(range: Array<any>): Array<any>,
  
  __getNativeConfig(): any,
}
declare var $1: typeof AnimatedWithChildren;
export type {InterpolationConfigType};

declare module.exports: typeof AnimatedInterpolation;
