// @flow
declare var AnimatedValue: typeof $1;
const $1 = require("./nodes/AnimatedValue");

type Mapping = {[key: string]: Mapping,...} | AnimatedValue;
type EventConfig = {
  listener?: ?Function,
  useNativeDriver: boolean,
};

declare function attachNativeEvent(
  viewRef: any,
  eventName: string,
  argMapping: $ReadOnlyArray<?Mapping>
): {detach: () => void};

declare class AnimatedEvent {
  __isNative: boolean,
  
  constructor(argMapping: $ReadOnlyArray<?Mapping>, config: EventConfig): void,
  
  __addListener(callback: Function): void,
  
  __removeListener(callback: Function): void,
  
  __attach(viewRef: any, eventName: string): void,
  
  __detach(viewTag: any, eventName: string): void,
  
  __getHandler(): any | ((...args: any) => void),
}
export type {Mapping};
export type {EventConfig};

declare module.exports: {|
  AnimatedEvent: typeof AnimatedEvent,
  attachNativeEvent: typeof attachNativeEvent,
|};
