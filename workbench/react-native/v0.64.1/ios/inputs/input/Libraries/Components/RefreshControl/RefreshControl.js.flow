// @flow
declare var React: typeof $1;
const $1 = require("react");

import type {ColorValue} from "../../StyleSheet/StyleSheet";
import type {ViewProps} from "../View/ViewPropTypes";

declare var RefreshLayoutConsts: any;

type IOSProps = $ReadOnly<
  {|
    /**
   * The color of the refresh indicator.
   */
    tintColor?: ?ColorValue,
    /**
   * Title color.
   */
    titleColor?: ?ColorValue,
    /**
   * The title displayed under the refresh indicator.
   */
    title?: ?string,
  |},
>;

type AndroidProps = $ReadOnly<
  {|
    /**
   * Whether the pull to refresh functionality is enabled.
   */
    enabled?: ?boolean,
    /**
   * The colors (at least one) that will be used to draw the refresh indicator.
   */
    colors?: ?$ReadOnlyArray<ColorValue>,
    /**
   * The background color of the refresh indicator.
   */
    progressBackgroundColor?: ?ColorValue,
    /**
   * Size of the refresh indicator, see RefreshControl.SIZE.
   */
    size?: ?(
      | typeof RefreshLayoutConsts.SIZE.DEFAULT
      | typeof RefreshLayoutConsts.SIZE.LARGE),
    /**
   * Progress view top offset
   */
    progressViewOffset?: ?number,
  |},
>;

type RefreshControlProps = $ReadOnly<
  {|
    ...ViewProps,
    ...IOSProps,
    ...AndroidProps,
    
    /**
   * Called when the view starts refreshing.
   */
    onRefresh?: ?(() => void | Promise<void>),
    
    /**
   * Whether the view should be indicating an active refresh.
   */
    refreshing: boolean,
  |},
>;

declare class RefreshControl
  extends $2<RefreshControlProps> {
  static SIZE: any,
  
  componentDidMount(): void,
  
  componentDidUpdate(prevProps: RefreshControlProps): void,
  
  render(): React.Node,
}
declare var $2: typeof React.Component;
export type {RefreshControlProps};

declare module.exports: typeof RefreshControl;
