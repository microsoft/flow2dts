// @flow
import type {HostComponent} from "../../Renderer/shims/ReactNativeTypes";
import type {ViewProps} from "../View/ViewPropTypes";

import * as React from "react";
import type {Float} from "react-native/Libraries/Types/CodegenTypes";
import type {WithDefault} from "react-native/Libraries/Types/CodegenTypes";
import type {BubblingEventHandler} from "react-native/Libraries/Types/CodegenTypes";

type Event = $ReadOnly<
  {|
    timestamp: Float,
  |},
>;

type NativeProps = $ReadOnly<
  {|
    ...ViewProps,
    date?: ?Float,
    initialDate?: ?Float,
    locale?: ?string,
    maximumDate?: ?Float,
    minimumDate?: ?Float,
    minuteInterval?: WithDefault<
      1 | 2 | 3 | 4 | 5 | 6 | 10 | 12 | 15 | 20 | 30,
      1,
    >,
    mode?: WithDefault<'date' | 'time' | 'datetime', 'date'>,
    onChange?: ?BubblingEventHandler<Event>,
    timeZoneOffsetInMinutes?: ?Float,
  |},
>;

type ComponentType = HostComponent<NativeProps>;

interface NativeCommands {
  +setNativeDate: (
    viewRef: React.ElementRef<ComponentType>,
    date: Float
  ) => void,
}

declare var Commands: NativeCommands;
export {Commands};

declare export default HostComponent<NativeProps>;
