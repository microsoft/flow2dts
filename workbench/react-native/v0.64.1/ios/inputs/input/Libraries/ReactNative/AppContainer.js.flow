// @flow
import * as React from "react";

type Context = {rootTag: number,...};

type Props = $ReadOnly<
  {|
    children?: React.Node,
    fabric?: boolean,
    rootTag: number,
    initialProps?: {...},
    showArchitectureIndicator?: boolean,
    WrapperComponent?: ?React.ComponentType<any>,
    internal_excludeLogBox?: ?boolean,
  |},
>;

type State = {|
  inspector: ?React.Node,
  mainKey: number,
  hasError: boolean,
|};

declare class AppContainer
  extends $1<Props, State> {
  state: State,
  
  static getDerivedStateFromError: any,
  
  static childContextTypes: any | {|rootTag: React$PropType$Primitive<number>|},
  
  getChildContext(): Context,
  
  componentDidMount(): void,
  
  componentWillUnmount(): void,
  
  render(): React.Node,
}
declare var $1: typeof React.Component;

declare module.exports: typeof AppContainer;
