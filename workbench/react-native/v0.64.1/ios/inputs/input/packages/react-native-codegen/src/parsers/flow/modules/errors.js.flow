// @flow
declare var ParserError: typeof $5.ParserError;
declare var $5: typeof $4;
const $4 = require("../errors");

declare class MisnamedModuleFlowInterfaceParserError
  extends $2 {
  constructor(hasteModuleName: string, id: $FlowFixMe): void,
}
declare var $2: typeof ParserError;

declare class ModuleFlowInterfaceNotParserError
  extends $3 {
  constructor(hasteModuleName: string, ast: $FlowFixMe): void,
}
declare var $3: typeof ParserError;

declare class UnsupportedModulePropertyParserError
  extends $12 {
  constructor(
    hasteModuleName: string,
    propertyValue: $FlowFixMe,
    propertyName: string,
    invalidPropertyValueType: string
  ): void,
}
declare var $12: typeof ParserError;

declare class UnsupportedFlowTypeAnnotationParserError
  extends $9 {
  +typeAnnotationType: string,
  constructor(hasteModuleName: string, typeAnnotation: $FlowFixMe): void,
}
declare var $9: typeof ParserError;

declare class UnsupportedFlowGenericParserError
  extends $8 {
  +genericName: string,
  constructor(hasteModuleName: string, genericTypeAnnotation: $FlowFixMe): void,
}
declare var $8: typeof ParserError;

declare class IncorrectlyParameterizedFlowGenericParserError
  extends $1 {
  +genericName: string,
  +numTypeParameters: number,
  
  constructor(hasteModuleName: string, genericTypeAnnotation: $FlowFixMe): void,
}
declare var $1: typeof ParserError;

declare class UnsupportedArrayElementTypeAnnotationParserError
  extends $7 {
  constructor(
    hasteModuleName: string,
    arrayElementTypeAST: $FlowFixMe,
    arrayType: 'Array' | '$ReadOnlyArray',
    invalidArrayElementType: string
  ): void,
}
declare var $7: typeof ParserError;

declare class UnsupportedObjectPropertyTypeAnnotationParserError
  extends $13 {
  constructor(
    hasteModuleName: string,
    propertyAST: $FlowFixMe,
    invalidPropertyType: string
  ): void,
}
declare var $13: typeof ParserError;

declare class UnsupportedObjectPropertyValueTypeAnnotationParserError
  extends $14 {
  constructor(
    hasteModuleName: string,
    propertyValueAST: $FlowFixMe,
    propertyName: string,
    invalidPropertyValueType: string
  ): void,
}
declare var $14: typeof ParserError;

declare class UnnamedFunctionParamParserError
  extends $6 {
  constructor(functionParam: $FlowFixMe, hasteModuleName: string): void,
}
declare var $6: typeof ParserError;

declare class UnsupportedFunctionParamTypeAnnotationParserError
  extends $10 {
  constructor(
    hasteModuleName: string,
    flowParamTypeAnnotation: $FlowFixMe,
    paramName: string,
    invalidParamType: string
  ): void,
}
declare var $10: typeof ParserError;

declare class UnsupportedFunctionReturnTypeAnnotationParserError
  extends $11 {
  constructor(
    hasteModuleName: string,
    flowReturnTypeAnnotation: $FlowFixMe,
    invalidReturnType: string
  ): void,
}
declare var $11: typeof ParserError;

declare module.exports: {|
  IncorrectlyParameterizedFlowGenericParserError: typeof IncorrectlyParameterizedFlowGenericParserError,
  MisnamedModuleFlowInterfaceParserError: typeof MisnamedModuleFlowInterfaceParserError,
  ModuleFlowInterfaceNotParserError: typeof ModuleFlowInterfaceNotParserError,
  UnnamedFunctionParamParserError: typeof UnnamedFunctionParamParserError,
  UnsupportedArrayElementTypeAnnotationParserError: typeof UnsupportedArrayElementTypeAnnotationParserError,
  UnsupportedFlowGenericParserError: typeof UnsupportedFlowGenericParserError,
  UnsupportedFlowTypeAnnotationParserError: typeof UnsupportedFlowTypeAnnotationParserError,
  UnsupportedFunctionParamTypeAnnotationParserError: typeof UnsupportedFunctionParamTypeAnnotationParserError,
  UnsupportedFunctionReturnTypeAnnotationParserError: typeof UnsupportedFunctionReturnTypeAnnotationParserError,
  UnsupportedModulePropertyParserError: typeof UnsupportedModulePropertyParserError,
  UnsupportedObjectPropertyTypeAnnotationParserError: typeof UnsupportedObjectPropertyTypeAnnotationParserError,
  UnsupportedObjectPropertyValueTypeAnnotationParserError: typeof UnsupportedObjectPropertyValueTypeAnnotationParserError,
|};
