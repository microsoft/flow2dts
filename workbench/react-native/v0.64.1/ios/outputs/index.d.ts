import { $PropertyType } from "utility-types";
// @flow
import AccessibilityInfo$f2tTypeof from "./Libraries/Components/AccessibilityInfo/AccessibilityInfo";
declare type AccessibilityInfo = typeof AccessibilityInfo$f2tTypeof;
import ActivityIndicator$f2tTypeof from "./Libraries/Components/ActivityIndicator/ActivityIndicator";
declare type ActivityIndicator = typeof ActivityIndicator$f2tTypeof;
import Button$f2tTypeof from "./Libraries/Components/Button";
declare type Button = typeof Button$f2tTypeof;
import DatePickerIOS$f2tTypeof from "./Libraries/Components/DatePicker/DatePickerIOS";
declare type DatePickerIOS = typeof DatePickerIOS$f2tTypeof;
import FlatList$f2tTypeof from "./Libraries/Lists/FlatList";
declare type FlatList = typeof FlatList$f2tTypeof;
import Image$f2tTypeof from "./Libraries/Image/Image";
declare type Image = typeof Image$f2tTypeof;
import ImageBackground$f2tTypeof from "./Libraries/Image/ImageBackground";
declare type ImageBackground = typeof ImageBackground$f2tTypeof;
import InputAccessoryView$f2tTypeof from "./Libraries/Components/TextInput/InputAccessoryView";
declare type InputAccessoryView = typeof InputAccessoryView$f2tTypeof;
import KeyboardAvoidingView$f2tTypeof from "./Libraries/Components/Keyboard/KeyboardAvoidingView";
declare type KeyboardAvoidingView = typeof KeyboardAvoidingView$f2tTypeof;
import MaskedViewIOS$f2tTypeof from "./Libraries/Components/MaskedView/MaskedViewIOS";
declare type MaskedViewIOS = typeof MaskedViewIOS$f2tTypeof;
import Modal$f2tTypeof from "./Libraries/Modal/Modal";
declare type Modal = typeof Modal$f2tTypeof;
import Picker$f2tTypeof from "./Libraries/Components/Picker/Picker";
declare type Picker = typeof Picker$f2tTypeof;
import PickerIOS$f2tTypeof from "./Libraries/Components/Picker/PickerIOS";
declare type PickerIOS = typeof PickerIOS$f2tTypeof;
import Pressable$f2tTypeof from "./Libraries/Components/Pressable/Pressable";
declare type Pressable = typeof Pressable$f2tTypeof;
import ProgressViewIOS$f2tTypeof from "./Libraries/Components/ProgressViewIOS/ProgressViewIOS";
declare type ProgressViewIOS = typeof ProgressViewIOS$f2tTypeof;
import RefreshControl$f2tTypeof from "./Libraries/Components/RefreshControl/RefreshControl";
declare type RefreshControl = typeof RefreshControl$f2tTypeof;
import SafeAreaView$f2tTypeof from "./Libraries/Components/SafeAreaView/SafeAreaView";
declare type SafeAreaView = typeof SafeAreaView$f2tTypeof;
import ScrollView$f2tTypeof from "./Libraries/Components/ScrollView/ScrollView";
declare type ScrollView = typeof ScrollView$f2tTypeof;
import SectionList$f2tTypeof from "./Libraries/Lists/SectionList";
declare type SectionList = typeof SectionList$f2tTypeof;
import SegmentedControlIOS$f2tTypeof from "./Libraries/Components/SegmentedControlIOS/SegmentedControlIOS";
declare type SegmentedControlIOS = typeof SegmentedControlIOS$f2tTypeof;
import Slider$f2tTypeof from "./Libraries/Components/Slider/Slider";
declare type Slider = typeof Slider$f2tTypeof;
import StatusBar$f2tTypeof from "./Libraries/Components/StatusBar/StatusBar";
declare type StatusBar = typeof StatusBar$f2tTypeof;
import Switch$f2tTypeof from "./Libraries/Components/Switch/Switch";
declare type Switch = typeof Switch$f2tTypeof;
import Text$f2tTypeof from "./Libraries/Text/Text";
declare type Text = typeof Text$f2tTypeof;
import TextInput$f2tTypeof from "./Libraries/Components/TextInput/TextInput";
declare type TextInput = typeof TextInput$f2tTypeof;
import Touchable$f2tTypeof from "./Libraries/Components/Touchable/Touchable";
declare type Touchable = typeof Touchable$f2tTypeof;
import TouchableHighlight$f2tTypeof from "./Libraries/Components/Touchable/TouchableHighlight";
declare type TouchableHighlight = typeof TouchableHighlight$f2tTypeof;
import TouchableNativeFeedback$f2tTypeof from "./Libraries/Components/Touchable/TouchableNativeFeedback";
declare type TouchableNativeFeedback = typeof TouchableNativeFeedback$f2tTypeof;
import TouchableOpacity$f2tTypeof from "./Libraries/Components/Touchable/TouchableOpacity";
declare type TouchableOpacity = typeof TouchableOpacity$f2tTypeof;
import TouchableWithoutFeedback$f2tTypeof from "./Libraries/Components/Touchable/TouchableWithoutFeedback";
declare type TouchableWithoutFeedback = typeof TouchableWithoutFeedback$f2tTypeof;
import View$f2tTypeof from "./Libraries/Components/View/View";
declare type View = typeof View$f2tTypeof;
import VirtualizedList$f2tTypeof from "./Libraries/Lists/VirtualizedList";
declare type VirtualizedList = typeof VirtualizedList$f2tTypeof;
import VirtualizedSectionList$f2tTypeof from "./Libraries/Lists/VirtualizedSectionList";
declare type VirtualizedSectionList = typeof VirtualizedSectionList$f2tTypeof;
import ActionSheetIOS$f2tTypeof from "./Libraries/ActionSheetIOS/ActionSheetIOS";
declare type ActionSheetIOS = typeof ActionSheetIOS$f2tTypeof;
import Alert$f2tTypeof from "./Libraries/Alert/Alert";
declare type Alert = typeof Alert$f2tTypeof;
import * as Animated$f2tTypeof from "./Libraries/Animated/Animated";
declare type Animated = typeof Animated$f2tTypeof;
import Appearance$f2tTypeof from "./Libraries/Utilities/Appearance";
declare type Appearance = typeof Appearance$f2tTypeof;
import AppRegistry$f2tTypeof from "./Libraries/ReactNative/AppRegistry";
declare type AppRegistry = typeof AppRegistry$f2tTypeof;
import AppState$f2tTypeof from "./Libraries/AppState/AppState";
declare type AppState = typeof AppState$f2tTypeof;
import AsyncStorage$f2tTypeof from "./Libraries/Storage/AsyncStorage";
declare type AsyncStorage = typeof AsyncStorage$f2tTypeof;
import BackHandler$f2tTypeof from "./Libraries/Utilities/BackHandler";
declare type BackHandler = typeof BackHandler$f2tTypeof;
import Clipboard$f2tTypeof from "./Libraries/Components/Clipboard/Clipboard";
declare type Clipboard = typeof Clipboard$f2tTypeof;
import DatePickerAndroid$f2tTypeof from "./Libraries/Components/DatePickerAndroid/DatePickerAndroid";
declare type DatePickerAndroid = typeof DatePickerAndroid$f2tTypeof;
import DeviceInfo$f2tTypeof from "./Libraries/Utilities/DeviceInfo";
declare type DeviceInfo = typeof DeviceInfo$f2tTypeof;
import DevSettings$f2tTypeof from "./Libraries/Utilities/DevSettings";
declare type DevSettings = typeof DevSettings$f2tTypeof;
import Dimensions$f2tTypeof from "./Libraries/Utilities/Dimensions";
declare type Dimensions = typeof Dimensions$f2tTypeof;
import Easing$f2tTypeof from "./Libraries/Animated/Easing";
declare type Easing = typeof Easing$f2tTypeof;
import ReactNative$f2tTypeof from "./Libraries/Renderer/shims/ReactNative";
declare type ReactNative = typeof ReactNative$f2tTypeof;
import I18nManager$f2tTypeof from "./Libraries/ReactNative/I18nManager";
declare type I18nManager = typeof I18nManager$f2tTypeof;
import ImagePickerIOS$f2tTypeof from "./Libraries/Image/ImagePickerIOS";
declare type ImagePickerIOS = typeof ImagePickerIOS$f2tTypeof;
import InteractionManager$f2tTypeof from "./Libraries/Interaction/InteractionManager";
declare type InteractionManager = typeof InteractionManager$f2tTypeof;
import Keyboard$f2tTypeof from "./Libraries/Components/Keyboard/Keyboard";
declare type Keyboard = typeof Keyboard$f2tTypeof;
import LayoutAnimation$f2tTypeof from "./Libraries/LayoutAnimation/LayoutAnimation";
declare type LayoutAnimation = typeof LayoutAnimation$f2tTypeof;
import Linking$f2tTypeof from "./Libraries/Linking/Linking";
declare type Linking = typeof Linking$f2tTypeof;
import LogBox$f2tTypeof from "./Libraries/LogBox/LogBox";
declare type LogBox = typeof LogBox$f2tTypeof;
import NativeDialogManagerAndroid$f2tTypeof from "./Libraries/NativeModules/specs/NativeDialogManagerAndroid";
declare type NativeDialogManagerAndroid = typeof NativeDialogManagerAndroid$f2tTypeof;
import NativeEventEmitter$f2tTypeof from "./Libraries/EventEmitter/NativeEventEmitter";
declare type NativeEventEmitter = typeof NativeEventEmitter$f2tTypeof;
import Networking$f2tTypeof from "./Libraries/Network/RCTNetworking";
declare type Networking = typeof Networking$f2tTypeof;
import PanResponder$f2tTypeof from "./Libraries/Interaction/PanResponder";
declare type PanResponder = typeof PanResponder$f2tTypeof;
import PermissionsAndroid$f2tTypeof from "./Libraries/PermissionsAndroid/PermissionsAndroid";
declare type PermissionsAndroid = typeof PermissionsAndroid$f2tTypeof;
import PixelRatio$f2tTypeof from "./Libraries/Utilities/PixelRatio";
declare type PixelRatio = typeof PixelRatio$f2tTypeof;
import PushNotificationIOS$f2tTypeof from "./Libraries/PushNotificationIOS/PushNotificationIOS";
declare type PushNotificationIOS = typeof PushNotificationIOS$f2tTypeof;
import Settings$f2tTypeof from "./Libraries/Settings/Settings";
declare type Settings = typeof Settings$f2tTypeof;
import Share$f2tTypeof from "./Libraries/Share/Share";
declare type Share = typeof Share$f2tTypeof;
import StatusBarIOS$f2tTypeof from "./Libraries/Components/StatusBar/StatusBarIOS";
declare type StatusBarIOS = typeof StatusBarIOS$f2tTypeof;
import StyleSheet$f2tTypeof from "./Libraries/StyleSheet/StyleSheet";
declare type StyleSheet = typeof StyleSheet$f2tTypeof;
import Systrace$f2tTypeof from "./Libraries/Performance/Systrace";
declare type Systrace = typeof Systrace$f2tTypeof;
import * as TurboModuleRegistry from "./Libraries/TurboModule/TurboModuleRegistry";
import UIManager$f2tTypeof from "./Libraries/ReactNative/UIManager";
declare type UIManager = typeof UIManager$f2tTypeof;
import useColorScheme$f2tTypeof from "./Libraries/Utilities/useColorScheme";
declare type useColorScheme = typeof useColorScheme$f2tTypeof;
import useWindowDimensions$f2tTypeof from "./Libraries/Utilities/useWindowDimensions";
declare type useWindowDimensions = typeof useWindowDimensions$f2tTypeof;
import UTFSequence$f2tTypeof from "./Libraries/UTFSequence";
declare type UTFSequence = typeof UTFSequence$f2tTypeof;
import Vibration$f2tTypeof from "./Libraries/Vibration/Vibration";
declare type Vibration = typeof Vibration$f2tTypeof;
import YellowBox$f2tTypeof from "./Libraries/YellowBox/YellowBoxDeprecated";
declare type YellowBox = typeof YellowBox$f2tTypeof;
import { DynamicColorIOS as DynamicColorIOS$f2tTypeof } from "./Libraries/StyleSheet/PlatformColorValueTypesIOS";
declare type DynamicColorIOS = typeof DynamicColorIOS$f2tTypeof;
import NativeModules$f2tTypeof from "./Libraries/BatchedBridge/NativeModules";
declare type NativeModules = typeof NativeModules$f2tTypeof;
import Platform$f2tTypeof from "./Libraries/Utilities/Platform";
declare type Platform = typeof Platform$f2tTypeof;
import { PlatformColor as PlatformColor$f2tTypeof } from "./Libraries/StyleSheet/PlatformColorValueTypes";
declare type PlatformColor = typeof PlatformColor$f2tTypeof;
import processColor$f2tTypeof from "./Libraries/StyleSheet/processColor";
declare type processColor = typeof processColor$f2tTypeof;
import RCTDeviceEventEmitter$f2tTypeof from "./Libraries/EventEmitter/RCTDeviceEventEmitter";
declare type RCTDeviceEventEmitter = typeof RCTDeviceEventEmitter$f2tTypeof;
import RCTNativeAppEventEmitter$f2tTypeof from "./Libraries/EventEmitter/RCTNativeAppEventEmitter";
declare type RCTNativeAppEventEmitter = typeof RCTNativeAppEventEmitter$f2tTypeof;
import { RootTagContext as RootTagContext$f2tTypeof } from "./Libraries/ReactNative/RootTag";
declare type RootTagContext = typeof RootTagContext$f2tTypeof;
import DeprecatedEdgeInsetsPropType$f2tTypeof from "./Libraries/DeprecatedPropTypes/DeprecatedEdgeInsetsPropType";
declare type DeprecatedEdgeInsetsPropType = typeof DeprecatedEdgeInsetsPropType$f2tTypeof;
import DeprecatedPointPropType$f2tTypeof from "./Libraries/DeprecatedPropTypes/DeprecatedPointPropType";
declare type DeprecatedPointPropType = typeof DeprecatedPointPropType$f2tTypeof;
import DeprecatedViewPropTypes$f2tTypeof from "./Libraries/DeprecatedPropTypes/DeprecatedViewPropTypes";
declare type DeprecatedViewPropTypes = typeof DeprecatedViewPropTypes$f2tTypeof;
import { HostComponent as _HostComponentInternal } from "./Libraries/Renderer/shims/ReactNativeTypes";
declare type HostComponent<T> = _HostComponentInternal<T>;
export type { HostComponent };
declare const $f2d_findNodeHandle: $PropertyType<ReactNative, "findNodeHandle">;
declare const $f2d_TurboModuleRegistry: typeof TurboModuleRegistry;
declare const $f2d_unstable_batchedUpdates: $PropertyType<ReactNative, "unstable_batchedUpdates">;
declare const $f2d_requireNativeComponent: <T>(uiViewClassName: string) => HostComponent<T>;
declare const $f2d_unstable_enableLogBox: () => void;
export { AccessibilityInfo, ActivityIndicator, Button, DatePickerIOS, FlatList, Image, ImageBackground, InputAccessoryView, KeyboardAvoidingView, MaskedViewIOS, Modal, Picker, PickerIOS, Pressable, ProgressViewIOS, RefreshControl, SafeAreaView, ScrollView, SectionList, SegmentedControlIOS, Slider, StatusBar, Switch, Text, TextInput, Touchable, TouchableHighlight, TouchableNativeFeedback, TouchableOpacity, TouchableWithoutFeedback, View, VirtualizedList, VirtualizedSectionList, ActionSheetIOS, Alert, Animated, Appearance, AppRegistry, AppState, AsyncStorage, BackHandler, Clipboard, DatePickerAndroid, DeviceInfo, DevSettings, Dimensions, Easing, $f2d_findNodeHandle as findNodeHandle, I18nManager, ImagePickerIOS, InteractionManager, Keyboard, LayoutAnimation, Linking, LogBox, NativeDialogManagerAndroid, NativeEventEmitter, Networking, PanResponder, PermissionsAndroid, PixelRatio, PushNotificationIOS, Settings, Share, StatusBarIOS, StyleSheet, Systrace, $f2d_TurboModuleRegistry as TurboModuleRegistry, UIManager, $f2d_unstable_batchedUpdates as unstable_batchedUpdates, useColorScheme, useWindowDimensions, UTFSequence, Vibration, YellowBox, DeviceEventEmitter, DynamicColorIOS, NativeAppEventEmitter, NativeModules, Platform, PlatformColor, processColor, $f2d_requireNativeComponent as requireNativeComponent, unstable_RootTagContext, $f2d_unstable_enableLogBox as unstable_enableLogBox, EdgeInsetsPropType, PointPropType, ViewPropTypes };
declare const $f2tExportDefault:
/*[FLOW2DTS - Warning] This type was an exact object type in the original Flow source.*/
{
  AccessibilityInfo: AccessibilityInfo;
  ActivityIndicator: ActivityIndicator;
  Button: Button;
  DatePickerIOS: DatePickerIOS;
  FlatList: FlatList;
  Image: Image;
  ImageBackground: ImageBackground;
  InputAccessoryView: InputAccessoryView;
  KeyboardAvoidingView: KeyboardAvoidingView;
  MaskedViewIOS: MaskedViewIOS;
  Modal: Modal;
  Picker: Picker;
  PickerIOS: PickerIOS;
  Pressable: Pressable;
  ProgressViewIOS: ProgressViewIOS;
  RefreshControl: RefreshControl;
  SafeAreaView: SafeAreaView;
  ScrollView: ScrollView;
  SectionList: SectionList;
  SegmentedControlIOS: SegmentedControlIOS;
  Slider: Slider;
  StatusBar: StatusBar;
  Switch: Switch;
  Text: Text;
  TextInput: TextInput;
  Touchable: Touchable;
  TouchableHighlight: TouchableHighlight;
  TouchableNativeFeedback: TouchableNativeFeedback;
  TouchableOpacity: TouchableOpacity;
  TouchableWithoutFeedback: TouchableWithoutFeedback;
  View: View;
  VirtualizedList: VirtualizedList;
  VirtualizedSectionList: VirtualizedSectionList;
  ActionSheetIOS: ActionSheetIOS;
  Alert: Alert;
  Animated: Animated;
  Appearance: Appearance;
  AppRegistry: AppRegistry;
  AppState: AppState;
  AsyncStorage: AsyncStorage;
  BackHandler: BackHandler;
  Clipboard: Clipboard;
  DatePickerAndroid: DatePickerAndroid;
  DeviceInfo: DeviceInfo;
  DevSettings: DevSettings;
  Dimensions: Dimensions;
  Easing: Easing;
  findNodeHandle: $PropertyType<ReactNative, "findNodeHandle">;
  I18nManager: I18nManager;
  ImagePickerIOS: ImagePickerIOS;
  InteractionManager: InteractionManager;
  Keyboard: Keyboard;
  LayoutAnimation: LayoutAnimation;
  Linking: Linking;
  LogBox: LogBox;
  NativeDialogManagerAndroid: NativeDialogManagerAndroid;
  NativeEventEmitter: NativeEventEmitter;
  Networking: Networking;
  PanResponder: PanResponder;
  PermissionsAndroid: PermissionsAndroid;
  PixelRatio: PixelRatio;
  PushNotificationIOS: PushNotificationIOS;
  Settings: Settings;
  Share: Share;
  StatusBarIOS: StatusBarIOS;
  StyleSheet: StyleSheet;
  Systrace: Systrace;
  TurboModuleRegistry: typeof TurboModuleRegistry;
  UIManager: UIManager;
  unstable_batchedUpdates: $PropertyType<ReactNative, "unstable_batchedUpdates">;
  useColorScheme: useColorScheme;
  useWindowDimensions: useWindowDimensions;
  UTFSequence: UTFSequence;
  Vibration: Vibration;
  YellowBox: YellowBox;
  DeviceEventEmitter: RCTDeviceEventEmitter;
  DynamicColorIOS: DynamicColorIOS;
  NativeAppEventEmitter: RCTNativeAppEventEmitter;
  NativeModules: NativeModules;
  Platform: Platform;
  PlatformColor: PlatformColor;
  processColor: processColor;
  requireNativeComponent: <T>(uiViewClassName: string) => HostComponent<T>;
  unstable_RootTagContext: RootTagContext;
  unstable_enableLogBox: () => void;
  EdgeInsetsPropType: DeprecatedEdgeInsetsPropType;
  PointPropType: DeprecatedPointPropType;
  ViewPropTypes: DeprecatedViewPropTypes;
};
export default $f2tExportDefault;
export * from "./TypeScriptSupplementals";