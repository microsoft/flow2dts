// @flow
import type {ComponentSchemaBuilderConfig} from "./schema.js";
declare var getCommands: typeof $4.getCommands;
declare var $4: typeof $3;
const $3 = require("./commands");
declare var getEvents: typeof $6.getEvents;
declare var $6: typeof $5;
const $5 = require("./events");
declare var getProps: typeof $14.getProps;
declare var getPropProperties: typeof $12.getPropProperties;
declare var $14: typeof $13;
declare var $12: typeof $11;
const $11 = require("./props");
const $13 = require("./props");
declare var getCommandOptions: typeof $2.getCommandOptions;
declare var getOptions: typeof $10.getOptions;
declare var $2: typeof $1;
declare var $10: typeof $9;
const $1 = require("./options");
const $9 = require("./options");
declare var getExtendsProps: typeof $8.getExtendsProps;
declare var removeKnownExtends: typeof $18.removeKnownExtends;
declare var $8: typeof $7;
declare var $18: typeof $17;
const $17 = require("./extends");
const $7 = require("./extends");
declare var getTypes: typeof $16.getTypes;
declare var $16: typeof $15;
const $15 = require("../utils");

declare function findComponentConfig(ast: $FlowFixMe): $FlowFixMe;

declare function getCommandProperties(
  commandTypeName: $FlowFixMe,
  types: $FlowFixMe,
  commandOptions: $FlowFixMe
): $FlowFixMe;

declare function buildComponentSchema(
  ast: $FlowFixMe
): ComponentSchemaBuilderConfig;

declare module.exports: {|
  buildComponentSchema: typeof buildComponentSchema,
|};
