// @flow
declare var React: typeof $1;
const $1 = require("react");

import type {ColorValue} from "../../StyleSheet/StyleSheet";

type StatusBarStyle = $Keys<
  {
    /**
   * Default status bar style (dark for iOS, light for Android)
   */
    default: string,
    /**
   * Dark background, white texts and icons
   */
    "light-content": string,
    /**
   * Light background, dark texts and icons
   */
    "dark-content": string,
    ...,
  },
>;

type StatusBarAnimation = $Keys<
  {
    /**
   * No animation
   */
    none: string,
    /**
   * Fade animation
   */
    fade: string,
    /**
   * Slide animation
   */
    slide: string,
    ...,
  },
>;

type AndroidProps = $ReadOnly<
  {|
    /**
   * The background color of the status bar.
   * @platform android
   */
    backgroundColor?: ?ColorValue,
    /**
   * If the status bar is translucent.
   * When translucent is set to true, the app will draw under the status bar.
   * This is useful when using a semi transparent status bar color.
   *
   * @platform android
   */
    translucent?: ?boolean,
  |},
>;

type IOSProps = $ReadOnly<
  {|
    /**
   * If the network activity indicator should be visible.
   *
   * @platform ios
   */
    networkActivityIndicatorVisible?: ?boolean,
    /**
   * The transition effect when showing and hiding the status bar using the `hidden`
   * prop. Defaults to 'fade'.
   *
   * @platform ios
   */
    showHideTransition?: ?('fade' | 'slide' | 'none'),
  |},
>;

type Props = $ReadOnly<
  {|
    ...AndroidProps,
    ...IOSProps,
    /**
   * If the status bar is hidden.
   */
    hidden?: ?boolean,
    /**
   * If the transition between status bar property changes should be animated.
   * Supported for backgroundColor, barStyle and hidden.
   */
    animated?: ?boolean,
    /**
   * Sets the color of the status bar text.
   */
    barStyle?: ?('default' | 'light-content' | 'dark-content'),
  |},
>;

declare class StatusBar
  extends $2<Props> {
  static currentHeight: ?number,
  
  static setHidden(hidden: boolean, animation?: StatusBarAnimation): void,
  
  static setBarStyle(style: StatusBarStyle, animated?: boolean): void,
  
  static setNetworkActivityIndicatorVisible(visible: boolean): void,
  
  static setBackgroundColor(color: string, animated?: boolean): void,
  
  static setTranslucent(translucent: boolean): void,
  
  static pushStackEntry(props: any): any,
  
  static popStackEntry(entry: any): void,
  
  static replaceStackEntry(entry: any, props: any): any,
  
  static defaultProps: {|
    animated: boolean,
    showHideTransition: string,
  |},
  
  componentDidMount(): void,
  
  componentWillUnmount(): void,
  
  componentDidUpdate(): void,
  
  render(): React.Node,
}
declare var $2: typeof React.Component;
export type {StatusBarStyle};

export type {StatusBarAnimation};

declare module.exports: typeof StatusBar;
