// @flow
import type {SyntheticEvent} from "../../Types/CoreEventTypes";

type AccessibilityRole = 
  | 'none'
  | 'button'
  | 'link'
  | 'search'
  | 'image'
  | 'keyboardkey'
  | 'text'
  | 'adjustable'
  | 'imagebutton'
  | 'header'
  | 'summary'
  | 'alert'
  | 'checkbox'
  | 'combobox'
  | 'menu'
  | 'menubar'
  | 'menuitem'
  | 'progressbar'
  | 'radio'
  | 'radiogroup'
  | 'scrollbar'
  | 'spinbutton'
  | 'switch'
  | 'tab'
  | 'tablist'
  | 'timer'
  | 'toolbar';

type AccessibilityActionInfo = $ReadOnly<
  {
    name: string,
    label?: string,
    ...,
  },
>;

type AccessibilityActionEvent = SyntheticEvent<
  $ReadOnly<{actionName: string,...}>,
>;

type AccessibilityState = {
  disabled?: boolean,
  selected?: boolean,
  checked?: ?boolean | 'mixed',
  busy?: boolean,
  expanded?: boolean,
  ...,
};

type AccessibilityValue = $ReadOnly<
  {|
    /**
   * The minimum value of this component's range. (should be an integer)
   */
    min?: number,
    
    /**
   * The maximum value of this component's range. (should be an integer)
   */
    max?: number,
    
    /**
   * The current value of this component's range. (should be an integer)
   */
    now?: number,
    
    /**
   * A textual description of this component's value. (will override minimum, current, and maximum if set)
   */
    text?: string,
  |},
>;
export type {AccessibilityRole};

export type {AccessibilityActionInfo};

export type {AccessibilityActionEvent};

export type {AccessibilityState};

export type {AccessibilityValue};
