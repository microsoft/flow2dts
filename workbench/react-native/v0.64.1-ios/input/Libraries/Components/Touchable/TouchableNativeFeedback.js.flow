// @flow
import Pressability from "../../Pressability/Pressability";

import typeof TouchableWithoutFeedback from "./TouchableWithoutFeedback";

import * as React from "react";

type Props = $ReadOnly<
  {|
    ...React.ElementConfig<TouchableWithoutFeedback>,
    
    /**
   * Determines the type of background drawable that's going to be used to
   * display feedback. It takes an object with `type` property and extra data
   * depending on the `type`. It's recommended to use one of the static
   * methods to generate that dictionary.
   */
    background?: ?(
      | $ReadOnly<
        {|
          type: 'ThemeAttrAndroid',
          attribute: 
            | 'selectableItemBackground'
            | 'selectableItemBackgroundBorderless',
          rippleRadius: ?number,
        |},
      >
      | $ReadOnly<
        {|
          type: 'RippleAndroid',
          color: ?number,
          borderless: boolean,
          rippleRadius: ?number,
        |},
      >),
    
    /**
   * TV preferred focus (see documentation for the View component).
   */
    hasTVPreferredFocus?: ?boolean,
    
    /**
   * TV next focus down (see documentation for the View component).
   */
    nextFocusDown?: ?number,
    
    /**
   * TV next focus forward (see documentation for the View component).
   */
    nextFocusForward?: ?number,
    
    /**
   * TV next focus left (see documentation for the View component).
   */
    nextFocusLeft?: ?number,
    
    /**
   * TV next focus right (see documentation for the View component).
   */
    nextFocusRight?: ?number,
    
    /**
   * TV next focus up (see documentation for the View component).
   */
    nextFocusUp?: ?number,
    
    /**
   * Set to true to add the ripple effect to the foreground of the view, instead
   * of the background. This is useful if one of your child views has a
   * background of its own, or you're e.g. displaying images, and you don't want
   * the ripple to be covered by them.
   *
   * Check TouchableNativeFeedback.canUseNativeForeground() first, as this is
   * only available on Android 6.0 and above. If you try to use this on older
   * versions, this will fallback to background.
   */
    useForeground?: ?boolean,
  |},
>;

type State = $ReadOnly<
  {|
    pressability: Pressability,
  |},
>;

declare class TouchableNativeFeedback
  extends $1<Props, State> {
  static SelectableBackground: (
    rippleRadius: ?number
  ) => $ReadOnly<
    {|
      attribute: 'selectableItemBackground',
      type: 'ThemeAttrAndroid',
      rippleRadius: ?number,
    |},
  >,
  
  static SelectableBackgroundBorderless: (
    rippleRadius: ?number
  ) => $ReadOnly<
    {|
      attribute: 'selectableItemBackgroundBorderless',
      type: 'ThemeAttrAndroid',
      rippleRadius: ?number,
    |},
  >,
  
  static Ripple: (
    color: string,
    borderless: boolean,
    rippleRadius: ?number
  ) => $ReadOnly<
    {|
      borderless: boolean,
      color: ?number,
      rippleRadius: ?number,
      type: 'RippleAndroid',
    |},
  >,
  
  static canUseNativeForeground: () => boolean,
  
  state: State,
  
  render(): React.Node,
  
  componentDidUpdate(prevProps: Props, prevState: State): void,
  
  componentWillUnmount(): void,
}
declare var $1: typeof React.Component;

declare module.exports: typeof TouchableNativeFeedback;
