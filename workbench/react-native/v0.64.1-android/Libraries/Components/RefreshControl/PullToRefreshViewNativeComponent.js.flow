// @flow
import type {DirectEventHandler} from "../../Types/CodegenTypes";
import type {WithDefault} from "../../Types/CodegenTypes";
import type {ColorValue} from "../../StyleSheet/StyleSheet";
import type {ViewProps} from "../View/ViewPropTypes";
import * as React from "react";

import type {HostComponent} from "../../Renderer/shims/ReactNativeTypes";

type NativeProps = $ReadOnly<
  {|
    ...ViewProps,
    
    /**
   * The color of the refresh indicator.
   */
    tintColor?: ?ColorValue,
    /**
   * Title color.
   */
    titleColor?: ?ColorValue,
    /**
   * The title displayed under the refresh indicator.
   */
    title?: WithDefault<string, null>,
    
    /**
   * Called when the view starts refreshing.
   */
    onRefresh?: ?DirectEventHandler<null>,
    
    /**
   * Whether the view should be indicating an active refresh.
   */
    refreshing: boolean,
  |},
>;

type ComponentType = HostComponent<NativeProps>;

interface NativeCommands {
  +setNativeRefreshing: (
    viewRef: React.ElementRef<ComponentType>,
    refreshing: boolean
  ) => void,
}

declare var Commands: NativeCommands;
export {Commands};

declare export default HostComponent<NativeProps>;
