// @flow
import type {Int32} from "../../../../../Libraries/Types/CodegenTypes";
import type {Float} from "../../../../../Libraries/Types/CodegenTypes";
import type {BubblingEventHandler} from "../../../../../Libraries/Types/CodegenTypes";
import type {DirectEventHandler} from "../../../../../Libraries/Types/CodegenTypes";
import type {WithDefault} from "../../../../../Libraries/Types/CodegenTypes";
import type {ViewProps} from "../../../../../Libraries/Components/View/ViewPropTypes";

import type {HostComponent} from "../../../../../Libraries/Renderer/shims/ReactNativeTypes";

type OnChangeEvent = $ReadOnly<
  {|
    value: boolean,
    source?: string,
    progress: ?Int32,
    scale?: ?Float,
  |},
>;

type OnEventDirect = $ReadOnly<
  {|
    value: boolean,
  |},
>;

type OnOrientationChangeEvent = $ReadOnly<
  {|
    orientation: 'landscape' | 'portrait',
  |},
>;

type NativeProps = $ReadOnly<
  {|
    ...ViewProps,
    
    // Props
    disabled?: WithDefault<boolean, false>,
    
    // Events
    onChange?: ?BubblingEventHandler<OnChangeEvent, 'paperDirectName'>,
    onEventDirect?: ?DirectEventHandler<OnEventDirect>,
    onEventDirectWithPaperName?: ?DirectEventHandler<
      OnEventDirect,
      'paperDirectName',
    >,
    onOrientationChange?: ?DirectEventHandler<
      OnOrientationChangeEvent,
      'paperBubblingName',
    >,
    onEnd?: ?BubblingEventHandler<null>,
    onEventBubblingWithPaperName?: ?BubblingEventHandler<
      null,
      'paperBubblingName',
    >,
  |},
>;

declare export default HostComponent<NativeProps>;
