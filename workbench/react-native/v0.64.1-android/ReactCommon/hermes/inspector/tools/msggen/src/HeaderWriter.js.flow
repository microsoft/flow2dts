// @flow
import {Writable} from "stream";

import {PropsType} from "./Type";
import {Type} from "./Type";
import {Command} from "./Command";
import {Event} from "./Event";

declare class HeaderWriter {
  stream: Writable,
  types: Array<Type>,
  commands: Array<Command>,
  events: Array<Event>,
  
  constructor(
    stream: Writable,
    types: Array<Type>,
    commands: Array<Command>,
    events: Array<Event>
  ): void,
  
  write(): void,
  
  writePrologue(): void,
  
  writeForwardDecls(): void,
  
  writeRequestHandlerDecls(): void,
  
  writeTypeDecls(): void,
  
  writeRequestDecls(): void,
  
  writeResponseDecls(): void,
  
  writeNotificationDecls(): void,
  
  writeEpilogue(): void,
}

declare function emitTypeDecl(stream: Writable, type: PropsType): void;

declare function emitRequestDecl(stream: Writable, command: Command): void;

declare function emitResponseDecl(stream: Writable, command: Command): void;

declare function emitNotificationDecl(stream: Writable, event: Event): void;
export {HeaderWriter};

export {emitTypeDecl};

export {emitRequestDecl};

export {emitResponseDecl};

export {emitNotificationDecl};
